<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd

         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="ouc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
    </bean>
    <!--数据库连接池配置   主库连接池-->
    <bean id="masterDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${master.driver}"/>
        <property name="url" value="${master.url}"/>
        <property name="username" value="${master.username}"/>
        <property name="password" value="${master.password}"/>
        <property name="initialSize" value="${master.initialSize}"/>
        <property name="maxActive" value="${master.maxActive}"/>
        <property name="maxIdle" value="${master.maxIdle}"/>
        <property name="minIdle" value="${master.minIdle}"/>
        <property name="maxWait" value="${master.maxWait}"/>
    </bean>

    <!--从库连接池-->
    <bean id="slaveDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${slave.driver}"/>
        <property name="url" value="${slave.url}"/>
        <property name="username" value="${slave.username}"/>
        <property name="password" value="${slave.password}"/>
        <property name="initialSize" value="${slave.initialSize}"/>
        <property name="maxActive" value="${slave.maxActive}"/>
        <property name="maxIdle" value="${slave.maxIdle}"/>
        <property name="minIdle" value="${slave.minIdle}"/>
        <property name="maxWait" value="${slave.maxWait}"/>
    </bean>
    <!--自定义数据源,在主数据源和从数据源中选择-->
    <bean id="dataSource" class="ouc.kill.interceptor.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="masterDataSource" key="master"/>
                <entry value-ref="slaveDataSource" key="slave"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>

    <!--sessionFactory配置 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="ouc.kill.entity"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--开启事务-->
    <tx:annotation-driven transaction-manager="transactionManager" order="100"/>

    <!--spring-redis 配置-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxActive}"/>
        <property name="maxWaitMillis" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="poolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <constructor-arg index="3" value="${redis.timeout}"/>
        <!--Redis密码-->
        <constructor-arg index="4" value="${redis.pass}"/>
    </bean>

    <!-- AOP面向切面编程 -->
    <aop:aspectj-autoproxy/>
    <aop:config proxy-target-class="true"></aop:config>

</beans>
